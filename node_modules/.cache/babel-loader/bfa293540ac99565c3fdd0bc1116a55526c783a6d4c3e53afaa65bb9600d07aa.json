{"ast":null,"code":"var _jsxFileName = \"C:\\\\learnings\\\\react_projects\\\\iot-frontend\\\\src\\\\components\\\\Telemetry.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Telemetry = () => {\n  _s();\n  const [telemetry, setTelemetry] = useState([]);\n  const [telemetryPayload, setTelemetryPayload] = useState({\n    temperature: '',\n    humidity: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const getAuthHeader = () => {\n    const token = localStorage.getItem('token');\n    return token ? {\n      Authorization: `Bearer ${token}`\n    } : {};\n  };\n\n  // Fetch telemetry from /api/devices/telemetry\n  const fetchTelemetry = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get('http://localhost:8080/api/devices/telemetry', {\n        headers: getAuthHeader()\n      });\n      setTelemetry(response.data);\n      setError('');\n    } catch (error) {\n      setError('Failed to fetch telemetry.');\n      console.error('Error fetching telemetry:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login');\n    } else {\n      fetchTelemetry();\n    }\n  }, [navigate]);\n\n  // Send telemetry via /api/devices/telemetry\n  const handleSendTelemetry = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await axios.post('http://localhost:8080/api/devices/telemetry', JSON.stringify(telemetryPayload), {\n        headers: {\n          ...getAuthHeader(),\n          'Content-Type': 'application/json'\n        }\n      });\n      setTelemetryPayload({\n        temperature: '',\n        humidity: ''\n      });\n      fetchTelemetry();\n      setError('');\n    } catch (error) {\n      setError('Failed to send telemetry.');\n      console.error('Error sending telemetry:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Telemetry Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-500 mb-4\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendTelemetry,\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Temperature (\\xB0C)\",\n        value: telemetryPayload.temperature,\n        onChange: e => setTelemetryPayload({\n          ...telemetryPayload,\n          temperature: e.target.value\n        }),\n        className: \"border p-2 mr-2 rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Humidity (%)\",\n        value: telemetryPayload.humidity,\n        onChange: e => setTelemetryPayload({\n          ...telemetryPayload,\n          humidity: e.target.value\n        }),\n        className: \"border p-2 mr-2 rounded\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\",\n        disabled: loading,\n        children: loading ? 'Sending...' : 'Send Telemetry'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-xl font-semibold mb-2\",\n      children: \"Telemetry Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-2\",\n      children: telemetry.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"p-2 border-b\",\n        children: [\"Device ID: \", t.deviceId, \" - Payload: \", t.payload, \" - Timestamp: \", t.timestamp]\n      }, t.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Telemetry, \"mI17CJvy+wXC4JTqatGcOg4cha0=\", false, function () {\n  return [useNavigate];\n});\n_c = Telemetry;\nexport default Telemetry;\nvar _c;\n$RefreshReg$(_c, \"Telemetry\");","map":{"version":3,"names":["axios","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Telemetry","_s","telemetry","setTelemetry","telemetryPayload","setTelemetryPayload","temperature","humidity","error","setError","loading","setLoading","navigate","getAuthHeader","token","localStorage","getItem","Authorization","fetchTelemetry","response","get","headers","data","console","handleSendTelemetry","e","preventDefault","post","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","disabled","map","t","deviceId","payload","timestamp","id","_c","$RefreshReg$"],"sources":["C:/learnings/react_projects/iot-frontend/src/components/Telemetry.js"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Telemetry = () => {\r\n  const [telemetry, setTelemetry] = useState([]);\r\n  const [telemetryPayload, setTelemetryPayload] = useState({ temperature: '', humidity: '' });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const getAuthHeader = () => {\r\n    const token = localStorage.getItem('token');\r\n    return token ? { Authorization: `Bearer ${token}` } : {};\r\n  };\r\n\r\n  // Fetch telemetry from /api/devices/telemetry\r\n  const fetchTelemetry = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/devices/telemetry', {\r\n        headers: getAuthHeader(),\r\n      });\r\n      setTelemetry(response.data);\r\n      setError('');\r\n    } catch (error) {\r\n      setError('Failed to fetch telemetry.');\r\n      console.error('Error fetching telemetry:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      navigate('/login');\r\n    } else {\r\n      fetchTelemetry();\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Send telemetry via /api/devices/telemetry\r\n  const handleSendTelemetry = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    try {\r\n      await axios.post('http://localhost:8080/api/devices/telemetry', JSON.stringify(telemetryPayload), {\r\n        headers: { ...getAuthHeader(), 'Content-Type': 'application/json' },\r\n      });\r\n      setTelemetryPayload({ temperature: '', humidity: '' });\r\n      fetchTelemetry();\r\n      setError('');\r\n    } catch (error) {\r\n      setError('Failed to send telemetry.');\r\n      console.error('Error sending telemetry:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Telemetry Management</h2>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      {loading && <p className=\"text-blue-500 mb-4\">Loading...</p>}\r\n\r\n      {/* Telemetry Form */}\r\n      <form onSubmit={handleSendTelemetry} className=\"mb-6\">\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Temperature (Â°C)\"\r\n          value={telemetryPayload.temperature}\r\n          onChange={(e) => setTelemetryPayload({ ...telemetryPayload, temperature: e.target.value })}\r\n          className=\"border p-2 mr-2 rounded\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Humidity (%)\"\r\n          value={telemetryPayload.humidity}\r\n          onChange={(e) => setTelemetryPayload({ ...telemetryPayload, humidity: e.target.value })}\r\n          className=\"border p-2 mr-2 rounded\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Sending...' : 'Send Telemetry'}\r\n        </button>\r\n      </form>\r\n\r\n      {/* Telemetry List */}\r\n      <h3 className=\"text-xl font-semibold mb-2\">Telemetry Data</h3>\r\n      <ul className=\"space-y-2\">\r\n        {telemetry.map(t => (\r\n          <li key={t.id} className=\"p-2 border-b\">\r\n            Device ID: {t.deviceId} - Payload: {t.payload} - Timestamp: {t.timestamp}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Telemetry;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}